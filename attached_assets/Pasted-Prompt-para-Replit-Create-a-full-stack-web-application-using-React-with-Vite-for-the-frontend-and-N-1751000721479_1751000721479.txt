Prompt para Replit:
Create a full-stack web application using React with Vite for the frontend and Node.js with Express for the backend. The application will be a sophisticated and visually appealing dashboard for a social media AI content generation and scheduling tool.

Design & Styling:

Use a modern, professional, and clean design aesthetic.

Implement a dark mode theme as the default. The color palette should be based on dark grays and blacks (e.g., #111827, #1F2937), with a vibrant accent color like electric blue (#3b82f6) or purple (#8b5cf6) for interactive elements, buttons, and highlights.

Use Tailwind CSS for all styling to ensure a consistent and responsive utility-first design.

Use a clean, sans-serif font like 'Inter' or 'Poppins' from Google Fonts.

Icons should be sourced from the Heroicons library.

Application Structure:
The application should be a Single Page Application (SPA) with a main layout consisting of:

A fixed sidebar for navigation on the left.

A main content area on the right that displays the different dashboard views.

1. Sidebar Navigation:

The sidebar should be fixed, always visible, and contain icons and labels for navigation.

Use placeholder data for user information at the top (e.g., a circular avatar and "Empresa X").

Navigation links should include:

Dashboard: (Icon: Home) - The main view with key metrics.

Calendario: (Icon: Calendar) - The content scheduling calendar.

Crear Contenido: (Icon: Sparkles) - The AI content generation interface.

Validación: (Icon: CheckCircle) - The queue for posts pending approval.

Analíticas: (Icon: ChartBar) - The performance analytics view.

Configuración: (Icon: Cog) - A placeholder for settings.

2. Vistas del Dashboard (Área de Contenido Principal):

a) Vista: Dashboard Principal

This should be the default view.

Use a grid layout to display several summary cards (widgets).

Card 1: "Publicaciones Programadas para Hoy": Show a number (e.g., "3") and a list of placeholder post titles for today.

Card 2: "Pendientes de Aprobación": Show a number (e.g., "5") and a button "Ir a Validación".

Card 3: "Rendimiento General (Últimos 7 días)": Display a small, placeholder line chart (using a library like recharts or chart.js) showing a positive trend. Label it "Interacciones".

Card 4: "Creación Rápida": A mini-form with a text input for "Tema del post" and a "Generar Borrador" button. This is a shortcut to the "Crear Contenido" view.

b) Vista: Calendario

Implement a full-page calendar view (using a library like react-big-calendar or a custom-built grid).

Populate the calendar with mock/placeholder data representing scheduled posts for different social networks.

Each calendar entry should be a colored card. Use different colors for different social networks (e.g., blue for LinkedIn, light blue for Twitter, purple for Instagram).

The card should show the social media icon, the start of the post text (e.g., "Anuncio de nuevo producto..."), and the scheduled time.

Clicking on a post should open a modal with the full post details and "Editar" or "Cancelar" buttons.

The calendar should have "Mes", "Semana", and "Día" views.

c) Vista: Crear Contenido

This is the core interface for the AI assistant.

The layout should be clean and focused.

Formulario de Entrada:

Campo de Texto "Tema Principal": A large text area for the user to input the topic.

Selector "Tono de Voz": A dropdown menu with options like "Profesional", "Ingenioso", "Inspirador", "Casual".

Selector de Plataformas: Checkboxes with icons for LinkedIn, Twitter, Instagram, y Web.

Botón "Generar Contenido": A prominent button with a sparkle icon.

Área de Resultados:

This area should initially be empty. After clicking "Generar Contenido", it should display mock results in tabs, one for each selected platform (LinkedIn, Twitter, etc.).

Each tab should show a preview of the post formatted for that specific platform, including a placeholder image.

Each generated post preview should have three buttons below it: "Aprobar y Programar", "Editar" y "Descartar".

d) Vista: Validación

This view is for the approval workflow.

Use a Kanban-style layout with two columns: "Pendiente de Aprobación" y "Rechazado".

Populate the "Pendiente de Aprobación" column with several placeholder post cards.

Each card should show a preview of the post (social media icon, text, placeholder image).

Each card must have two prominent buttons: "Aprobar" (green) y "Rechazar" (red).

When "Aprobar" is clicked, the card should animate and disappear from the queue.

When "Rechazar" is clicked, the card should animate and move to the "Rechazado" column.

e) Vista: Analíticas

Create a dashboard with several larger placeholder charts.

Use a charting library like recharts or chart.js.

Chart 1: "Crecimiento de Seguidores": A line chart showing mock data for the last 30 days across all platforms.

Chart 2: "Tasa de Interacción por Plataforma": A bar chart comparing mock engagement rates for LinkedIn, Twitter, e Instagram.

Chart 3: "Publicaciones con Mejor Rendimiento": A table listing the top 5 mock posts with columns for "Publicación", "Plataforma", "Interacciones", y "Alcance".

Backend (Node.js/Express):

For now, the backend should only serve the React application.

Create placeholder API endpoints (e.g., /api/posts, /api/analytics) that return static, hardcoded JSON mock data to populate the frontend components. This is crucial so the frontend can be built as if it's fetching real data. Do not connect to any real database or external APIs.

Please generate all necessary files and folder structures. The code should be clean, well-commented, and follow modern React best practices (using functional components and hooks).

